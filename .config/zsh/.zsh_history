fasdf
brew uninstall starship
cd p[
cd opt
brew uninstall spaceship
rm spaceship.zsh
rm spaceship.zsh.zwc
curl -sS https://starship.rs/install.sh | sh
brew install starship
starship
echo something
soemting
rm .config/starship.toml
nvim starship.toml
somergsd
soasd
someting
cd nvim
something
c
cc main.c libft/libft.a
cp Han/* src
mv src/minishell.h Han
ls src
cat README.md
cd common_core/minishell/docs
mindmap.png
open mindmap.png
git clone git@github.com:ollie-joestar/pipex.git
cd Han
zxc
cp .config/starship.toml .
starship preset jetpack -o ~/.config/starship.toml
cmatrix
git stas
git commit -m "lil update"
git commit -m "lil something"
nvim .config/starship.toml
cd com.
cd com.google.Chrome
cd config
cd pulse
cd Do
cd komorebi-2.1
mkdir build
cd build
rm -rf *
l;s
gifview
nvim ~/.config/starship.toml
git commit -m "new update"
brew install --cask alacritty
brew install alacritty
cargo install alacritty
ncdu
neofetch
brew install fastfetch
echo ðƒ¿ƒ§¨
nvim .config
brew list
kkkkkkkkkkkkkkkkclear
mv main.c docs
git commit -m "move old main to docs/"
s
cc src/main.c src/execution.c src/constructors.c includes/minishell.h
git commit -m "split exec to multiple types"
git config --global user.name "Ollie Joestar"
git config --global user.email "bigzzzid@gmail.com"
git config --global --list
cat hello world
touch PLAN.md
mkdir get_next_line
cd get_next_line
rm -rf get_next_line
echo hello
echo hello world
echo -n hello world
env | cat > out
car out
unset PATH
git add src/
git add includes/
git add PLAN.md
git commit -m "discussion"
git config pull.rebase false
git commit -m "weird flex but ok"
< in ls -l > out
run-help char
[redir] ["infile"] | [word] ["ls"] | [word] [-l] | [word] [-a] |       argv = [ls][-l][-a]
git commit -m "shit"
cat starship.toml
rm starship.toml
nvim ,
rm PLAN.md
git commit -m "readme update"
cd libft_han
vim Makefile
git commit -m "Update comments in libft"
> outfile1 echo hello world | < infile3 "ca""t" > outfile3
rm outfile3
rm outfile1
> outfile1 echo hello world | < README.md "ca""t" > outfile3
cat outfile1
> outfile1 echo hello world | < README.md < README.md "ca""t" > outfile3
cat outfile
cat outfile3
git commit -m "i hope for no conflicts"
git branch checkout dev_o
git checkout dev_o
git checkout -b dev-o
git commit -m "first commit  dev-o branch"
git push --set-upstream origin dev-o
git commit -m "removed useless"
git ls files
cat  something > out1 > out2
cat README.md > out1 > out2
cat out1
cat out2
rm ou2
rm out1
rm out2
git commit -m "exec, reroute and clean_exec"
git commit -m "trying to resolve merge conflict"
git pull 
git checkout dev-o
git commit -m "resolve merge in minishell.h"
git checkout main
rm libft_han
rm -rf libft_han
cd docs
git commit -m "mini cleanup in the head"
git commit -m "head is cleaner now"
git commit -m "i am completely lost tbh :D"
git add src/main.c
git commit -m "wow"
git commit -m "so line or read_line or line_read. HANJU TELL ME PLEASE"
cd src/ma
git commit -m "bruh"
brew tap arl/arl\
brew install gitmux
gitmux -printcfg > $HOME/.gitmux.conf
tmux ls
brew install spotify-tui
cargo install spotify-tui
cargo spt
ls ~/.cargo/bin/spt\

ls ~/.cargo/bin/
cd .cargo
cd registry
cd cache
sr
cd tld
mv bin ../.cargo
cd ../.cargo
cd utils
gitmux pwd
gitmux /home/oohnivch/.tmux/plugins/tmux/utils
tmux-spotify-tui
spt playback
cd 
cd status
cd tmux
cd themes
gitmux
git commit -m "what's going on"
git ls
gcm "showing off"
readline man
man readline
asdfds
man addhistory
man add_history
"ls"
export PATH
export $PATH
/ls
pipex
pipex_bonus
./pipex_bonus
bash\\
asd
gcm "before smoke"
mkdir Han_new
cp src/*.c Han_new
cd Han_new
rm clean.c
rm exec*
rm reroute.c
rm constructors.c
rm general_utils.c
rm main.c
gcm "before cleanup"
git add clean.c
git add general_utils.c
git add execution.c
git add exec_utils.c
gcm "before test"
ga src/reroute.c
gcm "reroute bruh"
cd dotfiles
cd extra
cd nvim-old
cat nicelinks.txt
chmod 777 compile.sh
mv compile.sh src
./src/compile.sh
./compile.sh
cp main.c ../..
git add .
mv ../main.c src
./constructors.c
cd ../libft
cd ../src
cat main.c
nvim lexer.c
cc main.c general_utils.c execution.c lexer.c lexer_utils_1.c reroute.c exec_utils.c clean.c ../libft/libft.a -I../libft/includes -I../includes -lreadline
/bin/ls
lldb ./a.out
cc main.c general_utils.c execution.c lexer.c lexer_utils_1.c reroute.c exec_utils.c clean.c ../libft/libft.a -I../libft/includes -I../includes -lreadline -g
touch compile_shit
rm compile_
rm compile_shit
gcm "works"
lr
cd src_bonus
w
./pipex_bonus here_doc lim cat cat out
cd pipex
cc src/random.c src/here_doc.c includes/minishell.h
cc src/random.c src/here_doc.c includes/minishell.h libft/libft.a
cc src/random.c src/here_doc.c src/general_utils.c includes/minishell.h libft/libft.a
./a.out
rm random.c
ga cmd_path.c
ga echo.c
ga env.c
ga env_utils.c
ga execution.c
ga here_doc.c
ga main.c
ga path.c
ga ../includes/minishell.h
ga ../libft/src/ft_strdup.c
ga ../libft/src/ft_strjoin.c
ga ../libft/src/ft_substr.c
ga constructors.c
ga general_utils.c
gcm "blazingly fast"
cd ../includes
rm minishell.h.gch
gcm "yaboiii"
gcm "addinpout"
gcm "added the heredoc to tokenization"
gcm "test for Han"
ll
mkdir rust
cd rust
mkdir tests
cd tests
cc main.c
./a.out "l""s"
./a.out "l""s""a"
cd $HOME
cd common_core/minishell
ccd
cd common_core/tests
chmod 777 scroll_text.sh
./scroll_text.sh
cd .brew
chmod 777 current_song.sh
./.config/current_song.sh
spt 
spt current
nvim current_song.sh
./current_song.sh
\:w
spt
spt --help
spt -tick-rate 50
spt -tick-rate <50>
spt --tick-rate <50>
spt --tick-rate 50
nvim .tmux
man chdir
cd src libft
echo$?
cd pwd
cd asd asd
cd asd dsa
cd src src
export ?=lol
export ?='lol'
export lol='haha'
echo $l"o"l
echo $HOME
cd /home/oohnivch
cd common_core/minishell/
unset HOME
cd ../..
source .config/bash/.bashrc 
source .config/zsh/.zshrc 
cd libft
gcm "good thursday"
export lol="ha ha"
echo lol
export lol="src nope"
echo $lol
cd $lol
export lol="rc"
cd s$lol
token        kistM tokeblsiot 
oldtoken  checkword for expand init_token(token->word)             kist <> newtokeb <> siot 
fst
gsy
ga includes/minishell.h
gcm "evening push"
git unstash
mk fclean
nvim Makefile
make log
make logo
[echo] ["smoething] [else"] [>] [out]
echo "something else"
echo -e "something \nelse"
echo -e "something\n else"
something_else
something.else | wc -l
echo something.else | wc
echo something,else | wc
echo something_else | wc
echo something@else | wc
echo something~else | wc
echo something else | wc
echo something"else" | wc
gcm "typical monday"
ga src/token_utils.c
gcm "mudamudamudamudamudamudamudamudamuda"
ga src/useless.c
ga src/expander.c
gcm "bye, have a great time"
rm '[big]'
vg
./minishell "asd'"
./minishell "asd'"'\
asd\
asd\
clear\
exit
./minishell "asd"'
pgrep minishell
ls -l /proc/4128142/fd
gcm "bro is here"
ga libft/src/get_next_line_utils.c
gcm "ft_free"
ga src/execution.c
gcm "exec shit"
gs
git -b dev
git checkout dev
git checkout -b dev
cd .tmux
cd plugins
cd tmux-loadavg
./tmux-loadavg.tmux
cd scripts
./display_load.sh
cat
./minishell cat asdf asdf
ft_lock
lldb ./minishell
gcm "debug dev branch into main"
gps main
git pus origin main
git push origin main
echo $gco
echo $gc
echo $gb
echo $ga
gps --set-upstream origin dev
naje
maje
nvin .tmux.conf
gb
gco dev
gco -b dev
gcm "dev test"
git push --set-upstream origin dev
cat Makefile | cat
cd ../pipex
nvim .vimrc
vim
vim .
git ls-files
gcm "fix pipes"
git stash
git branch -d dev
git branch
gcm "git is confusing"
git stash pop
git clone github.com:ollie-joestar/minishell.git
pwd
gcm "working exec. Need builtins and parsing"
n vim .
cat so_long.h
cat compile_flags.txt
rm asdf
git restore src/main.c
valgrind ./minishell
vgf --gen-suppressions=all ./minishell
cd vg_supp
vg --leak-check=full ./minishell
vg --leak-check=full -s ./minishell
vg -s --leak-check=full --show-leak=kinds=all ./minishell
vg -s --leak-check=full --show-leak-kinds=all ./minishell
valgrind --leak-check=full --gen-suppressions=all ./minishell
valgrind -s --leak-check=full --gen-suppressions=all ./minishell
valgrind -s --leak-check=full --leak-kinds=all --gen-suppressions=all ./minishell
nvim readline.supp
nvim ..
valgrind -s --leak-check=full --show-leak-kinds=all --gen-suppressions=all ./minishell
valgrind -s --leak-check=full --show-leak-kinds=all ./minishell
man free_history
rm goals
rm trololo
gcm "bobs & vageen"
export test='boobs'
echo$test
echo $test
echo "$te""st"
echo " $te""st "
echo " $test "
gcm "have a nice weekend"
cd .config/nvim
cd lua/joestar/plugins
ln -s ~/.local/kitty.app/bin/kitty ~/.local/bin/kitty
cd .var
cd app
cd..
litty
source ~/.config/zsh/.zshrc
curl -L https://sw.kovidgoyal.net/kitty/installer.sh | sh /dev/stdin portable
kitty -d debug.log
cat test
rm test
find ~ -name debug.log
rm -rf ~/.local/kitty.app
rm -f ~/.local/bin/kitty
find ~ -name kitty
find . -name kitty
cd .ca
rm -rf kitty
cd .brew/Cellar/ncurses/6.5/share/terminfo/k
cat ~/.bashrc
cd bash
cat .bashrc
curl -L https://sw.kovidgoyal.net/kitty/installer.sh | sh /dev/stdin
./.local/kitty.app/bin/kitty
./.local/kitty.app/bin/kitty --detach
cd .local/share/fonts
rm 1JetBrainsMonoNerdFontMono-Regular.ttf
fc-list
cd .local/share
cd fonts/
cp JetBrainsMonoNerdFontMono-Regular.ttf 1JetBrainsMonoNerdFontMono-Regular.ttf
ls -aR
kitty @ ls
kitty @
cd .cache
cd fontconfig
cd oohnivch
cd sgoinfre
fc-cache -fv
fc-list | grep JetBrains Mono
fc-list | grep "JetBrains Mono"
fc-list | grep JetBrains
kitty +list-fonts
ls -l
asd
asdckear
asdf
kt
kitty --debug-font-fallback
ls -la
kitty list-fonts
grep -n FONTFACE /etc/default/console-setup
grep -i "fontface" /etc/default/console-setup
$ grep 'FontName=' ~/.config/xfce4/terminal/terminalrc
grep 'FontName=' ~/.config/xfce4/terminal/terminalrc
kitten themes
kitten choose-fonts
cd .config/kitt
rm kitty.conf.bak
mv kitty.conf old.kitty.conf
kitty
cd -
echo $VISUAL
cd ../bash
cd ~/.config
echo asd
casdf
<<<<<<\
\

\

asdhk
kitty --detach
tmux
cat <in >out
cat <i nput
rm -rf so_long
git clone git@github.com:ollie-joestar/so_long.git
cd so_long
make bonus
vfg ./so_long_bonus
vgf ./so_long_bonus
vgf ./so_long_bonus maps/map_bonus.ber
gsettings set org.gnome.desktop.default-applications.terminal exec kitty\
gsettings set org.gnome.desktop.default-applications.terminal exec-arg ""\

gsettings set org.gnome.desktop.default-applications.terminal exec kitty\

gsettings set org.gnome.desktop.default-applications.terminal exec-arg ""\

echo $kitty
where kitty
env
cd ../zsh
run-help \[\'hello\]\[big\]\[world\'\]
exot
xprop -root | grep _NET_WM_CM_S0
echo $XDG_SESSION_TYPE
ps aux | grep -E 'compton|picom|mutter|kwin|xcompmgr'
cd common_core
\:wq
gcm "readme update"
gcm "commented out annoying stuff"
export
./mini
gcm "bro... what did you do to tokenizing ???:DDD"
git push
git log
nvim ,.
gcm "commented out broken stuff + add export(no args)"
echo $EDITOR
which nvim
ls -l /home/oohnivch/.brew/bin/nvim
/home/oohnivch/.brew/bin/nvim
node
less /home/oohnivch/.local/state/nvim/lsp.log\

less /home/oohnivch/.local/state/nvim/lsp.log | grep Copilot
cd .config/kitty
\:q
echo 'ls'
echo $;s
echo $ls
alias ls
unset
unset 2
unset 2a
echo $2
echo $1
echo $0
echo $3
CD .local/share/applications
which kitty
cd .local/share/applications
nvim kitty.desktop
mkdir tmp
git clone git@github.com:k0nserv/kitty-icon.git
cd kitty-icon
cd src
update-desktop-database ~/.local/share/applications
lol
echo X11
echo $DISPLAY
echo $lvl
echo $LVL
echo $SHLVL
nvim .tmux.conf
make 
gcm "add unset"
cd kitty.app
cd bin
kitten choose-font
nvim
git pull origin main
rm -rf minishell
git clone git@github.com:ollie-joestar/minishell.git
cd minishell
git checkout han
git merge main
git add Makefile
git add includes/minishell.h
git status
git add src/expander.c
nvim 
git add src/free.c
git commit -m "ollie testing some shit"
git push -u origin han
gco main
git st
gst
nvim README.md
cat Makefile
cat Makefile > out
cat out
rm out
gcm "trololo"
cd includes
norminette
vg ./minishell
echo < Makefile
< Makefile cat > out | cat -e
< Makefile cat | cat -e
< Makefile cat | cat
< Makefile cat | cat | echo lol
< Makefile << "lim" > out1 echo hello world > out2 < compile_flags.txt| < README.md "ca""t" > out3\
something here\
lol\
lim
cat out3
htop
rm out*
rm src/useless.c
gcm "Do you know the definition of insanity?"
cd .config/zsh
nvim .zshrc
bash -c 'bash <(curl -s https://raw.githubusercontent.com/froz42/funcheck/main/scripts/install.sh)'
ECHO $term
echo $TERM
echo $SH
echo $SHELL
echo $PATH
42free
nvim .config/zsh/.zshrc
cd .local
ks
cd funcheck
cd host
source .config/zsh/.zshrc
funcheck
eixt
funcheck ./minishell
cd zsh
vgf ./minishell
echo "line1 \n line2"
bash -c "$(curl -fsSL https://raw.githubusercontent.com/LeaYeh/42_minishell_tester/master/install.sh)"
mstest
ls -a
rm .zshrc
mtest m
cd mstest_output_2024-12-02_16.57.08
rm '<'
rm '>'
rm '>>'
rm '|'
rm '$HOME'
rm '$notexists'
rm '$USER'
rm '$USER'\''$USER'\''
rm '$USER'\''$USER'\'''
rm asd
rm -rf  mstest_output_2024-12-02_16.57.08
rm -rf  mstest_output_2024-12-02_16.59.04
rm echo
rm file
gcm "1894/3000"
git clone git@github.com:ollie-joestar/minishell.git mini_test
cd mini_test
mv mini_test test_mini
rm tests
rm -rf tests
cd test_mini
gcm "export"
cd ../test_mini
git pull
nvim /home/oohnivch/42_minishell_tester/cmds/mand/8_syntax_errors.sh
nvim /home/oohnivch/42_minishell_tester/cmds/mand/2_path_check.sh
cd /bin/
touch tmp_x_file1
tmp_x_file1
cp -r minishell tmp_mini
nvim /home/oohnivch/42_minishell_tester/cmds/mand/1_builtins_env.sh:5
nvim /home/oohnivch/42_minishell_tester/cmds/mand/1_builtins_env.sh
$?
;s
cd tmp_mini
cd mstest_output_2024-12-02_18.19.13
cd mand
cd 1_builtins_exit
make flcena
make fclean
rm tmp_x_file1
gcm "1975"
make re
gcm "status or exit_status?"
cd .
rm tmp_mini
rm -rf tmp_mini
nv8im .
gp
lock
./minishell
echo $?
bash
make
cd ..
rm -rf tmp
cp minishell tmp
cp -r minishell tmp
cd tmp
mstest m
mstest m | grep 69
cd ../minishell
ga .
gcm
gcm "69"
gps
cd Downloads
./1137036.jpg
kitten icat 1137036.jpg
cd .config
cd kitty
nvim .
cd
mini
ls
clear
exit
: 1733559380:0;ls
: 1733559384:0;mkdir dash
: 1733559385:0;ls
: 1733559387:0;cd dash
: 1733559387:0;ls
: 1733559447:0;git clone git@github.com:42-Dash/ReCursed_main.git
: 1733559453:0;ls
: 1733559471:0;cd ReCursed_main
: 1733559472:0;ls
: 1733559476:0;cat README.MD
: 1733559479:0;nvim .
: 1733559497:0;mkdir src
: 1733559499:0;mkdir inc
: 1733559553:0;ga .
: 1733559559:0;gcm "folders"
: 1733559565:0;gps
: 1733559606:0;nvim .
: 1733559717:0;cd ..
: 1733559719:0;cd ReCursed_main
: 1733559719:0;ls
: 1733559723:0;ga .
: 1733559732:0;gcm "main"
: 1733559733:0;gps
: 1733559879:0;cd src
: 1733559883:0;rm main.cpp
: 1733559884:0;cd ..
: 1733559886:0;ga .
: 1733559887:0;gcm
: 1733559892:0;gcm "delete main"
: 1733559894:0;gps
: 1733563089:0;nvim .
: 1733563103:0;mkdir maps
: 1733563105:0;nvim .
: 1733563412:0;ls
: 1733563416:0;rm NetrwTreeListing
: 1733563417:0;ls
: 1733563420:0;nvim .
: 1733563941:0;ga maps/
: 1733563956:0;gcm "add 4 simple test maps"
: 1733563959:0;gps
: 1733566928:0;gp
: 1733566935:0;nvim .
: 1733567288:0;ga .
: 1733567290:0;gcm 
: 1733567296:0;gcm "printmap"
: 1733567297:0;gps
: 1733567301:0;make
: 1733567306:0;make fclean
: 1733567670:0;gp
: 1733567673:0;nvim 
: 1733567685:0;nvim .
: 1733567751:0;ga Map.cpp
: 1733567758:0;gcm "printfix"
: 1733567759:0;gps
: 1733567944:0;nvim .
: 1733567997:0;mini
: 1733568002:0;cat compile_flags.txt
: 1733568024:0;nvim .
: 1733568042:0;gp
: 1733568046:0;nvim .
: 1733568268:0;lock
: 1733572113:0;cd dash
: 1733572114:0;ls
: 1733572115:0;cd ReCursed_main
: 1733572116:0;ls
: 1733572118:0;nvim .
: 1733572556:0;gp
: 1733572587:0;git reset --hard
: 1733572592:0;gp
: 1733572599:0;nvim .
: 1733573738:0;lock
: 1733574077:0;nvim .
: 1733576531:0;ga .
: 1733576540:0;gcm "distances"
: 1733576541:0;gps
: 1733576598:0;nvim .
: 1733576629:0;gp
: 1733576634:0;nvim .
: 1733577666:0;ga .
: 1733577672:0;gcm "before disaster"
: 1733577677:0;gp
: 1733577699:0;git config pull.rebase false
: 1733577702:0;git pull
: 1733577714:0;nvim Path.hpp
: 1733577766:0;gst
: 1733577772:0;ga Path.hpp
: 1733577782:0;gcm "during disaster"
: 1733577786:0;gps
: 1733577810:0;nvim .
: 1733579419:0;gst
: 1733579425:0;ga Map.cpp
: 1733579427:0;ga Map.hpp
: 1733579441:0;gcm "add shortest paths basic"
: 1733579454:0;gps
: 1733579749:0;nvim .
: 1733580275:0;git pull
: 1733580282:0;ga .
: 1733580290:0;gcm "another disaster"
: 1733580293:0;gp
: 1733580307:0;nvim .
: 1733580309:0;make
: 1733580319:0;./marvin maps/1.txt
: 1733580352:0;nvim .
: 1733580429:0;cat maps/1.txt
: 1733580581:0;make re
: 1733580586:0;./marvin maps/1.txt
: 1733580619:0;make re
: 1733580621:0;./marvin maps/1.txt
: 1733580780:0;make re
: 1733580782:0;./marvin maps/1.txt
: 1733580948:0;make re
: 1733580950:0;./marvin maps/1.txt
: 1733581085:0;make re
: 1733581087:0;./marvin maps/1.txt
: 1733581112:0;make re
: 1733581114:0;./marvin maps/1.txt
: 1733581170:0;make re
: 1733581173:0;./marvin maps/1.txt
: 1733581203:0;make re
: 1733581204:0;./marvin maps/1.txt
: 1733581390:0;make re
: 1733581392:0;./marvin maps/1.txt
: 1733581419:0;make re
: 1733581420:0;./marvin maps/1.txt
: 1733581423:0;ga .
: 1733581441:0;gcm "we got something\
\
\!\
"
: 1733581445:0;gps
: 1733582831:0;make re
: 1733582837:0;./marvin maps/1.txt
: 1733582869:0;ga .
: 1733582878:0;gcm "shortest cost fix"
: 1733582881:0;gp
: 1733582895:0;gps
: 1733584304:0;nvim .
: 1733584450:0;ls
: 1733584453:0;ga maps/
: 1733584465:0;gcm "add trace maps"
: 1733584468:0;gps
: 1733584473:0;gp
: 1733584484:0;ga maps/
: 1733584486:0;gcm "add trace maps"
: 1733584488:0;gps
: 1733585511:0;gp
: 1733585516:0;nvim .
: 1733586188:0;ga /
: 1733586190:0;ga .
: 1733586202:0;gcm "add calcskill to shortest"
: 1733586203:0;gps
: 1733586447:0;gp
: 1733586451:0;nvim .
: 1733586706:0;make
: 1733586721:0;./marvin maps/easy2500.txt
: 1733586766:0;make
: 1733586768:0;./marvin maps/easy2500.txt
: 1733589165:0;,ake
: 1733589167:0;make
: 1733589200:0;make re
: 1733589226:0;./marvin maps/easy2500.txt
: 1733589338:0;make
: 1733589340:0;./marvin maps/easy2500.txt
: 1733589520:0;ga .
: 1733589537:0;gcm "triple calculus"
: 1733589539:0;gps
: 1733589842:0;clear
: 1733589860:0;nvim .
: 1733591319:0;make
: 1733591323:0;make re
: 1733591651:0;make
: 1733591653:0;make re
: 1733591681:0;./marvin maps/amongus.txt
: 1733591728:0;make re
: 1733591731:0;./marvin maps/amongus.txt
: 1733591769:0;make re
: 1733591772:0;./marvin maps/amongus.txt
: 1733591877:0;make re
: 1733591880:0;./marvin maps/amongus.txt
: 1733592444:0;make re
: 1733592447:0;./marvin maps/amongus.txt
: 1733592495:0;./marvin maps/simpson.txt
: 1733592553:0;make
: 1733592556:0;make fclean
: 1733592608:0;ga .
: 1733592609:0;gcm
: 1733592612:0;gcm lol
: 1733592615:0;gps
: 1733592626:0;gp
: 1733592651:0;git pull
: 1733592659:0;git add Makefile
: 1733592660:0;gcm
: 1733592662:0;gcm make
: 1733592672:0;git status
: 1733592882:0;git add .
: 1733592884:0;git status
: 1733592890:0;ga .
: 1733592898:0;gcm "nope"
: 1733592903:0;gps
: 1733592918:0;make re
: 1733592924:0;./marvin
: 1733592930:0;./marvin maps/amongus.txt
: 1733592967:0;make re
: 1733592972:0;./marvin maps/amongus.txt
: 1733593257:0;gp
: 1733593270:0;ga .
: 1733593276:0;gcm "last"
: 1733593288:0;gp
: 1733593298:0;gps
: 1733593304:0;make
: 1733593353:0;./marvin maps/havefun.txt
: 1733593387:0;nvim .
: 1733593426:0;make re
: 1733593437:0;./marvin maps/havefun.txt
: 1733593475:0;make re
: 1733593478:0;./marvin maps/havefun.txt
: 1733593504:0;./marvin maps/vienna.txt
: 1733593622:0;make re
: 1733593624:0;./marvin maps/vienna.txt
: 1733593629:0;./marvin maps/havefun.txt
: 1733593659:0;make re
: 1733593661:0;./marvin maps/havefun.txt
: 1733593685:0;./marvin maps/vienna.txt
: 1733593749:0;./marvin maps/globalwarming.txt
: 1733593829:0;make fclean
: 1733593838:0;make re
: 1733593946:0;./marvin maps/vienna.txt
: 1733593954:0;./marvin maps/globalwarming.txt
: 1733593962:0;./marvin maps/havefun.txt
: 1733594052:0;make re
: 1733594075:0;./marvin maps/havefun.txt
: 1733594084:0;make re
: 1733594087:0;./marvin maps/havefun.txt
: 1733594096:0;make re
: 1733594098:0;./marvin maps/havefun.txt
: 1733594101:0;ga .
: 1733594108:0;gcm "have fun"
: 1733594110:0;gps
: 1733594309:0;cat Makefile
: 1733594605:0;make re
: 1733594646:0;./marvin maps/havefun.txt
: 1733594693:0;lock
: 1733597634:0;make re
: 1733597641:0;./marvin maps/vienna.txt
: 1733597774:0;lock
: 1734351355:0;ls
: 1734351362:0;rm dotfiles
: 1734351368:0;rm -rf dotfiles
: 1734351368:0;ls
: 1734351372:0;git clone git@github.com:ollie-joestar/dotfiles.git
: 1734351405:0;ls
: 1734351411:0;cd mu_code
: 1734351411:0;ls
: 1734351456:0;mini
: 1734351458:0;git pull
: 1734351467:0;mstest
: 1734351476:0;make
: 1734351480:0;mini
: 1734351481:0;nvim .
: 1734351502:0;make re
: 1734351510:0;mstest
: 1734351517:0;mstest m
: 1734351783:0;vgf ./minishell
: 1734351819:0;clear
: 1734351823:0;vgf ./minishell
: 1734351862:0;clear
: 1734351867:0;cd
: 1734351868:0;clear
: 1734351872:0;cd dotfiles
: 1734351873:0;ls
: 1734351874:0;ls -a
: 1734351895:0;rm .bashrc
: 1734351905:0;rm .tmux.conf
: 1734351910:0;rm .vimrc
: 1734351913:0;rn .zshrc
: 1734351916:0;rm .zshrc
: 1734351917:0;ls
: 1734351918:0;cd extra
: 1734351919:0;ls
: 1734351928:0;rm -rf nvim-old
: 1734351929:0;ls
: 1734351933:0;cat nicelinks.txt
: 1734351936:0;cd ..
: 1734351937:0;ls
: 1734351938:0;ls -a
: 1734351944:0;cat .dir_colours
: 1734351984:0;clear
: 1734351985:0;ls
: 1734351988:0;ls -0a
: 1734351990:0;ls -a
: 1734352009:0;cp .bashrc dotfiles
: 1734352021:0;cp .gitconfig dotfiles
: 1734352030:0;cp .gitmux.conf dotfiles
: 1734352041:0;cp .tmux.conf dotfiles
: 1734352053:0;cp .valgrindrc dotfiles
: 1734352065:0;cp .vimrc dotfiles
: 1734352090:0;cp vg_supp dotfiles
: 1734352096:0;cp -r vg_supp dotfiles/
: 1734352097:0;ls
: 1734352101:0;ls -a
: 1734352115:0;mkdir .config
: 1734352119:0;cd .config
: 1734352119:0;ls
: 1734352130:0;cd bash
: 1734352131:0;ls
: 1734352133:0;cd ..
: 1734352135:0;rm bash
: 1734352142:0;rmdir bash
: 1734352147:0;cd bash
: 1734352149:0;ls --a
: 1734352151:0;ls -a
: 1734352154:0;cat .bashrc
: 1734352156:0;cd ..
: 1734352162:0;rm -rf bash
: 1734352162:0;ls
: 1734352194:0;cp -r kitty ../dotfiles/.config
: 1734352213:0;cp starship.toml ../dotfiles/.config
: 1734352223:0;cp -r zsh ../dotfiles/.config
